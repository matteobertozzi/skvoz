#!/usr/bin/env python
# Copyright (c) 2012, Matteo Bertozzi
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#   * Neither the name of the <organization> nor the
#     names of its contributors may be used to endorse or promote products
#     derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

import sys
import os

def show_help():
    print >> sys.stderr, "Usage: skvoz <command> [options ...]"
    print >> sys.stderr
    print >> sys.stderr, "Commands:"
    print >> sys.stderr, "   shell              Aggregator shell."
    print >> sys.stderr, "   collector          Collection service."
    print >> sys.stderr, "   aggregator         Aggregation service."
    print >> sys.stderr, "   visualizator       Visualization service."
    print >> sys.stderr

def cmd_search_path():
    yield os.path.dirname(os.path.abspath(sys.argv[0]))
    for path in os.getenv("PATH").split(':'):
        yield path

if __name__ == '__main__':
    cmds = ('shell', 'collector', 'aggregator', 'visualizator')
    if len(sys.argv) < 2:
        show_help()
        sys.exit(1)

    if not sys.argv[1] in cmds:
        print >> sys.stderr, "Invalid Command", sys.argv[1]
        show_help()
        sys.exit(1)

    cmd = 'skvoz-' + sys.argv[1]
    for path in cmd_search_path():
        cmd_path = os.path.join(path, cmd)
        if os.path.exists(cmd_path):
            os.execv(cmd_path, [cmd_path] + sys.argv[2:])
            sys.exit(0)
    else:
        print >> sys.stderr, "Unable to find '%s' in the system, check PATH." %  cmd

